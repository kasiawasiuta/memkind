pipeline {
    agent {label "memkind_KNL2"}
    stages {
        stage("Set hugepages") {
            when { branch 'master' }
            steps {
                sh """
                    # These variables are overriden which causes out of memory exception
                    sudo sysctl vm.nr_hugepages=3000
                    sudo sysctl vm.nr_overcommit_hugepages=128
                """
            }
        }
        stage('Build') {
            agent none
            when { branch 'master' }
            steps {
                sh """
                    ./build_jemalloc.sh
                    ./autogen.sh
                    ./configure --enable-gcov
                    make -j
                    make checkprogs -j
                    sudo make install -j
                """
            }
        }
        stage('Run tests') {
            agent none
            when { branch 'master' }
            steps {
                sh """
                    # Run unit tests
                    set +e
                    export LD_LIBRARY_PATH=$WORKSPACE/.libs
                    make check
                    cat test-suite.log
                    # Run pmem examples
                    cd examples/.libs
                    find . -name "pmem*" -executable -type f -exec sh -c '"{}" /mnt/pmem0' \\;
                """
            }
        }
        stage('Run gcov') {
            agent none
            when { branch 'master' }
            steps {
                sh """
                    set +e
                    make test-clean
cat << EOF > coverage.sh
#!/bin/bash
# -p dir       Project root directory
# -s DIR       Directory to search for coverage reports.
# -Z           Exit with 1 if not successful. Default will Exit with 0

bash <(curl -s https://codecov.io/bash) -t 411f3936-658c-4673-9fc1-71c8722046fc -p $WORKSPACE -s $WORKSPACE -Z
EOF
                    chmod 700 coverage.sh
                    ./coverage.sh
                """
            }
        }
    }
}
